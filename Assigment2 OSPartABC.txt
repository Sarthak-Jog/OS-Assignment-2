PART "A"


What will the following commands do?

 echo "Hello, World!" ==> It prints Hello, World

 name="Productive"

 touch file.txt ==> It is used to create new file or multiple files. To change timestamps of an existing files.

 ls -a ==> It shows the list of files including hidden files.

 rm file.txt ==> It is used to deleting the file

 cp file1.txt file2.txt ==> It will copy the context file1.txt to file2.txt

 mv file.txt /path/to/directory/ ==> It will move the file.txt to the given path.

 chmod 755 script.sh ==> It gives the permission to owner-(R,W,X) , to user-(R,X) and to other users-(R,X)

 grep "pattern" file.txt ==> It will find all the occurances of the word "Pattern" in file.txt

 kill PID ==> It will kill the specific process or give signal to the other processes to handle it.

 mkdir mydir && cd mydir && touch file.txt && echo "Hello, World!" > file.txt && cat file.txt
==> 1)It will make directory named as "mydir", 
2)then open the mydir directory,
3)then create the new file named as file.txt, 
4)print "Hello,World!" by using echo &
5)display the content of the file.
 
 ls -l | grep ".txt" ==> It shows the detailed list & grep finds all the files which are having .txt extension.

 cat file1.txt file2.txt | sort | uniq 
==> 1) It will concatenate and display the contents of two files, file1.txt and file2.txt
2)It will sort the lines of a text file in alphabetical, numerical, or random order.
3)It will report or omit the repeated lines.

 ls -l | grep "^d" ==> Shows detailed list & grep command matches only the lines which are started from "d"

 grep -r "pattern" /path/to/directory/ ==> It will search the word "Pattern" the given directory which it gets from that path.

 cat file1.txt file2.txt | sort | uniq –d
1) It will concatenate and display the contents of two files, file1.txt and file2.txt
2)It will sort the lines of a text file in alphabetical, numerical, or random order.
3)It will only print the duplicate files.

 chmod 644 file.txt ==> It gives the permission to owner-(R,W) ,to user-(R) & to other users-(R)

 cp -r source_directory destination_directory ==> It will copy the source directory to the destination directory.

 find /path/to/search -name "*.txt" ==> It will show the full path of the file which are in current working directory or the subdirectories

 chmod u+x file.txt ==> It will give the permission to user to execute the file.

 echo $PATH ==> It will ind which directories your shell is set to check for executable files.

================================================================================================================================================================================================================

PART "B"


Identify True or False:
1. ls is used to list files and directories in a directory.==> True

2. mv is used to move files and directories.==>True

3. cd is used to copy files and directories.==> False

4. pwd stands for "print working directory" and displays the current directory.==> True

5. grep is used to search for patterns in files.==> True
==================================================================================================

PART "C"


1)Write a shell script that prints "Hello, World!" to the terminal.
Ans:-

#!/bin/bash
echo "Hello, World!"

vi f1.sh
chmod +x f1.sh
./f1.sh
Hello, World! ==>output

2)Declare a variable named "name" and assign the value "CDAC Mumbai" to it. Print the
value of the variable.
Ans:-

#!/bin/bash
name="CDAC Mumbai"
echo $name
vi f2.sh
chmod +x f2.sh
./f2.sh
CDAC Mumbai ==>output

3)Write a shell script that takes a number as input from the user and prints it.
Ans:-

#!/bin/bash
echo "Enter a number"
read num
echo $num
$ vi f3.sh
chmod +x f3.sh
./f3.sh
Enter a number
10 ///// takes the input from the user
10 ==>output


4)Write a shell script that performs addition of two numbers (e.g., 5 and 3) and prints the
result.
Ans:-

#!/bin/bash
echo "Give 2 numbers"
read num1
read num2
((res=$num1+$num2))
echo "Addition of 2 numbers is $res"
vi f4.sh
./f4.sh
Give 2 numbers
10 /////input from user
5 //////input from user
Addition of 2 numbers is 15 ==> output


5)Write a shell script that takes a number as input and prints "Even" if it is even, otherwise
prints "Odd".
Ans:-

#!/bin/bash
echo "Enter a number"
read num1
if [[($num1%2 -eq 0) ]];
then
        echo "Number $num1 is Even"
else
        echo "Number $num1 is Odd"
fi

vi f5.sh
chmod +x f5.sh
./f5.sh
Enter a number
47 /////user input
Number 47 is Odd ==>output
./f5.sh
Enter a number
56 /////user input
Number 56 is Even ==>output

6)Write a shell script that uses a for loop to print numbers from 1 to 5.
Ans:-

#!/bin/bash
for (( num = 1 ; num<=5 ; num++ ))
do
        echo $num
done
printf "\n"

$ vi f6.sh
chmod +x f6.sh
./f6.sh
1
2
3
4
5   ===>output


7)Write a shell script that uses a while loop to print numbers from 1 to 5.
Ans:-

#!/bin/bash
n=1
while [[ n -le 5 ]];
do
                echo $n
                let n+=1
done
        printf "\n"

vi f7.sh
./f7.sh
1
2
3
4
5 ==>output

8)Write a shell script that checks if a file named "file.txt" exists in the current directory. If it
does, print "File exists", otherwise, print "File does not exist".
Ans:-

ls
Familytree  LinuxAssignment  f1.sh  f2.sh  f3.sh  f4.sh  f5.sh  f6.sh  f7.sh  file1.txt  mydir
#!/bin/bash
if [[ -f "fil.txt" ]]
then
        echo "File exists"
else
        echo "File does not exists"
fi

vi f8.sh
./f8.sh
File does not exists ==>output



9)Write a shell script that uses the if statement to check if a number is greater than 10 and
prints a message accordingly.
Ans:-

#!/bin/bash
echo "Enter a number"
read num
if [[ (($num -gt 10)) ]]
then
        echo "$num is greater than 10"
else
        echo "$num is not greater than 10"
fi

vi f9.sh
chmod +x f9.sh
./f9.sh
Enter a number
8  ///////user input
8 is not greater than 10 ==>output
./f9.sh
Enter a number
25  ///////user input
25 is greater than 10 ==>output


10)Write a shell script that uses nested for loops to print a multiplication table for numbers
from 1 to 5. The output should be formatted nicely, with each row representing a number and each
column representing the multiplication result for that number.
Ans:-

#!/bin/bash
echo "Multiplication Table of 1 to 5"

for (( i=1 ; i <=5 ; i++ ))
do
        for (( j=1 ; j<=10 ; j++ ))
        do
                echo " $i X $j = $(($i * $j ))"
        echo " "
done
done

vi f10.sh
chmod +x f10.sh
./f10.sh
Multiplication Table of 1 to 5 ==> output
 1 X 1 = 1

 1 X 2 = 2

 1 X 3 = 3

 1 X 4 = 4

 1 X 5 = 5

 1 X 6 = 6

 1 X 7 = 7

 1 X 8 = 8

 1 X 9 = 9

 1 X 10 = 10

 2 X 1 = 2

 2 X 2 = 4

 2 X 3 = 6

 2 X 4 = 8

 2 X 5 = 10

 2 X 6 = 12

 2 X 7 = 14

 2 X 8 = 16

 2 X 9 = 18

 2 X 10 = 20

 3 X 1 = 3

 3 X 2 = 6

 3 X 3 = 9

 3 X 4 = 12

 3 X 5 = 15

 3 X 6 = 18

 3 X 7 = 21

 3 X 8 = 24

 3 X 9 = 27

 3 X 10 = 30

 4 X 1 = 4

 4 X 2 = 8

 4 X 3 = 12

 4 X 4 = 16

 4 X 5 = 20

 4 X 6 = 24

 4 X 7 = 28

 4 X 8 = 32

 4 X 9 = 36

 4 X 10 = 40
 
 5 X 1 = 5

 5 X 2 = 10

 5 X 3 = 15

 5 X 4 = 20

 5 X 5 = 25

 5 X 6 = 30

 5 X 7 = 35

 5 X 8 = 40

 5 X 9 = 45

 5 X 10 = 50


11) Write a shell script that uses a while loop to read numbers from the user until the user enters
a negative number. For each positive number entered, print its square. Use the break statement to exit the
loop when a negative number is entered.
Ans :-

#!/bin/bash
echo "Enter a number"
while true
do
        read num
        if [[ $num -gt 0 ]]
        then
                square=$((num*num))
        echo "Square of $num is $square"
else
        break
        fi
done

vi f11.sh
chmod +x f11.sh
./f11.sh
Enter a number
2  /////user input
Square of 2 is 4
3  /////user input
Square of 3 is 9
4  /////user input
Square of 4 is 16
5  /////user input
Square of 5 is 25
-1  /////user input gives negative so it breaks & jump outside the code.